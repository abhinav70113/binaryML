mkdir -p /tmp/Abhinav_DATA1115337/raw_data/runBB/
mkdir -p /tmp/Abhinav_DATA1115337/models/
mkdir -p /tmp/Abhinav_DATA1115337/hyperparameter_tuning/cnn/




############################################################################## 


           Comment: Binary simulations predictor: Predicting the frequency and drift. 
Best model is under:/tmp/Abhinav_DATA1115337/models/f_predict_cnn_1115337_            


 ############################################################################## 


 
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/train_data_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/val_data_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/test_labels_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/train_labels_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/test_data_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/val_labels_chunk.npy /tmp/Abhinav_DATA1115337/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/* /tmp/Abhinav_DATA1115337/hyperparameter_tuning/cnn/
mkdir -p /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/
List of dictionaries not found, creating all search combinations
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 1,
    deep_layer_size: [1512, 1296, 1080, 864, 648, 432],
    conv1d_filters: [144, 288, 432, 576, 720, 864, 1008, 1152, 1296, 1440],
    conv1d_kernel_size: [7, 14, 21, 28, 35, 42, 49, 56, 63, 70],
    dilation_rate_size: [176, 160, 144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 2,
    deep_layer_size: [96, 192, 288, 384, 480, 576],
    conv1d_filters: [104, 208, 312, 416, 520, 624, 728, 832, 936, 1040],
    conv1d_kernel_size: [31, 71, 38, 42, 61, 65, 19, 79, 36, 23],
    dilation_rate_size: [110, 100, 90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 3,
    deep_layer_size: [928, 832, 400, 936, 192, 864],
    conv1d_filters: [56, 112, 168, 224, 280, 336, 392, 448, 504, 560],
    conv1d_kernel_size: [33, 30, 27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 4,
    deep_layer_size: [136, 272, 408, 544, 680, 816],
    conv1d_filters: [1424, 864, 160, 1080, 2408, 2472, 2208, 2248, 1000, 224],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    dilation_rate_size: [12, 84, 118, 96, 82, 54, 66, 36, 68, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 5,
    deep_layer_size: [904, 1032, 1448, 600, 1192, 576],
    conv1d_filters: [120, 112, 2456, 1376, 488, 1496, 1976, 152, 128, 1824],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    dilation_rate_size: [132, 120, 108, 96, 84, 72, 60, 48, 36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 6,
    deep_layer_size: [224, 448, 672, 896, 1120, 1344],
    conv1d_filters: [744, 1912, 1968, 536, 776, 2376, 688, 2424, 504, 992],
    conv1d_kernel_size: [66, 60, 54, 48, 42, 36, 30, 24, 18, 12],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64, 72, 80],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 7,
    deep_layer_size: [136, 272, 408, 544, 680, 816],
    conv1d_filters: [1840, 2232, 2464, 568, 824, 960, 1384, 1024, 1320, 1000],
    conv1d_kernel_size: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64, 72, 80],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 8,
    deep_layer_size: [904, 1032, 1448, 600, 1192, 576],
    conv1d_filters: [144, 288, 432, 576, 720, 864, 1008, 1152, 1296, 1440],
    conv1d_kernel_size: [33, 30, 27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32, 36, 40],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 9,
    deep_layer_size: [968, 360, 296, 200, 1456, 128],
    conv1d_filters: [1760, 1600, 1440, 1280, 1120, 960, 800, 640, 480, 320],
    conv1d_kernel_size: [31, 71, 38, 42, 61, 65, 19, 79, 36, 23],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32, 36, 40],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 10,
    deep_layer_size: [904, 1032, 1448, 600, 1192, 576],
    conv1d_filters: [1840, 2232, 2464, 568, 824, 960, 1384, 1024, 1320, 1000],
    conv1d_kernel_size: [77, 70, 63, 56, 49, 42, 35, 28, 21, 14],
    dilation_rate_size: [102, 120, 156, 54, 56, 6, 98, 46, 92, 150],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 11,
    deep_layer_size: [96, 192, 288, 384, 480, 576],
    conv1d_filters: [144, 288, 432, 576, 720, 864, 1008, 1152, 1296, 1440],
    conv1d_kernel_size: [5, 10, 15, 20, 25, 30, 35, 40, 45, 50],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128, 144, 160],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 12,
    deep_layer_size: [928, 832, 400, 936, 192, 864],
    conv1d_filters: [120, 112, 2456, 1376, 488, 1496, 1976, 152, 128, 1824],
    conv1d_kernel_size: [24, 79, 35, 45, 12, 76, 43, 20, 47, 59],
    dilation_rate_size: [102, 120, 156, 54, 56, 6, 98, 46, 92, 150],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 13,
    deep_layer_size: [768, 512],
    conv1d_filters: [224, 448, 672, 896, 1120, 1344],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    dilation_rate_size: [12, 24, 36, 48, 60, 72],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 14,
    deep_layer_size: [448, 240],
    conv1d_filters: [120, 240, 360, 480, 600, 720],
    conv1d_kernel_size: [42, 36, 30, 24, 18, 12],
    dilation_rate_size: [28, 24, 20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 15,
    deep_layer_size: [72, 48],
    conv1d_filters: [1488, 1040, 424, 648, 192, 264],
    conv1d_kernel_size: [8, 44, 21, 43, 27, 41],
    dilation_rate_size: [14, 28, 42, 56, 70, 84],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 16,
    deep_layer_size: [312, 208],
    conv1d_filters: [224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [42, 3, 47, 37, 40, 13],
    dilation_rate_size: [56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 17,
    deep_layer_size: [72, 48],
    conv1d_filters: [176, 16, 1352, 1048, 256, 568],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    dilation_rate_size: [6, 12, 18, 24, 30, 36],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 18,
    deep_layer_size: [256, 88],
    conv1d_filters: [224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [7, 14, 21, 28, 35, 42],
    dilation_rate_size: [56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 19,
    deep_layer_size: [256, 88],
    conv1d_filters: [224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    dilation_rate_size: [56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 20,
    deep_layer_size: [136, 272],
    conv1d_filters: [1488, 1040, 424, 648, 192, 264],
    conv1d_kernel_size: [42, 3, 47, 37, 40, 13],
    dilation_rate_size: [70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 21,
    deep_layer_size: [64, 176],
    conv1d_filters: [112, 224, 336, 448, 560, 672],
    conv1d_kernel_size: [10, 41, 38, 2, 46, 17],
    dilation_rate_size: [14, 28, 42, 56, 70, 84],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 22,
    deep_layer_size: [768, 512],
    conv1d_filters: [224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    dilation_rate_size: [50, 14, 24, 16, 48, 68],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 23,
    deep_layer_size: [264, 176],
    conv1d_filters: [224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [42, 3, 47, 37, 40, 13],
    dilation_rate_size: [38, 10, 34, 82, 72, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 24,
    deep_layer_size: [768, 512],
    conv1d_filters: [112, 224, 336, 448, 560, 672],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    dilation_rate_size: [56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 25,
    deep_layer_size: [1240, 992, 744, 496],
    conv1d_filters: [480, 384, 288, 192],
    conv1d_kernel_size: [5, 10, 15, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 26,
    deep_layer_size: [120, 376, 520, 496],
    conv1d_filters: [136, 272, 408, 544],
    conv1d_kernel_size: [30, 14, 6, 9],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 27,
    deep_layer_size: [568, 424, 672, 816],
    conv1d_filters: [136, 272, 408, 544],
    conv1d_kernel_size: [20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 28,
    deep_layer_size: [120, 376, 520, 496],
    conv1d_filters: [760, 304, 640, 112],
    conv1d_kernel_size: [19, 31, 9, 15],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 29,
    deep_layer_size: [24, 512, 32, 624],
    conv1d_filters: [760, 304, 640, 112],
    conv1d_kernel_size: [6, 12, 18, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 30,
    deep_layer_size: [680, 376, 136, 72],
    conv1d_filters: [352, 216, 960, 568],
    conv1d_kernel_size: [6, 12, 18, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 31,
    deep_layer_size: [80, 160, 240, 320],
    conv1d_filters: [144, 288, 432, 576],
    conv1d_kernel_size: [20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 32,
    deep_layer_size: [144, 288, 432, 576],
    conv1d_filters: [48, 96, 144, 192],
    conv1d_kernel_size: [29, 16, 17, 13],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 33,
    deep_layer_size: [200, 160, 120, 80],
    conv1d_filters: [1240, 992, 744, 496],
    conv1d_kernel_size: [19, 31, 9, 15],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 34,
    deep_layer_size: [680, 376, 136, 72],
    conv1d_filters: [480, 384, 288, 192],
    conv1d_kernel_size: [2, 4, 6, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 35,
    deep_layer_size: [80, 160, 240, 320],
    conv1d_filters: [800, 640, 480, 320],
    conv1d_kernel_size: [30, 14, 6, 9],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 36,
    deep_layer_size: [24, 512, 32, 624],
    conv1d_filters: [760, 304, 640, 112],
    conv1d_kernel_size: [15, 12, 9, 6],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 37,
    deep_layer_size: [192, 384, 576, 768],
    conv1d_filters: [216, 432],
    conv1d_kernel_size: [14, 2],
    dilation_rate_size: [16, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 38,
    deep_layer_size: [656, 856, 392, 368],
    conv1d_filters: [576, 384],
    conv1d_kernel_size: [5, 10],
    dilation_rate_size: [8, 26],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 39,
    deep_layer_size: [80, 160, 240, 320],
    conv1d_filters: [576, 384],
    conv1d_kernel_size: [3, 11],
    dilation_rate_size: [8, 26],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 40,
    deep_layer_size: [192, 384, 576, 768],
    conv1d_filters: [120, 80],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [16, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 41,
    deep_layer_size: [72, 144, 216, 288],
    conv1d_filters: [576, 384],
    conv1d_kernel_size: [6, 12],
    dilation_rate_size: [16, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 42,
    deep_layer_size: [72, 144, 216, 288],
    conv1d_filters: [576, 384],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 43,
    deep_layer_size: [632, 360, 96, 840],
    conv1d_filters: [152, 304],
    conv1d_kernel_size: [2, 13],
    dilation_rate_size: [12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 44,
    deep_layer_size: [656, 856, 392, 368],
    conv1d_filters: [120, 80],
    conv1d_kernel_size: [6, 12],
    dilation_rate_size: [12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 45,
    deep_layer_size: [640, 512, 384, 256],
    conv1d_filters: [48, 96],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [8, 26],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 46,
    deep_layer_size: [80, 160, 240, 320],
    conv1d_filters: [192, 296],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 47,
    deep_layer_size: [32, 64, 96, 128],
    conv1d_filters: [120, 240],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 48,
    deep_layer_size: [32, 64, 96, 128],
    conv1d_filters: [192, 296],
    conv1d_kernel_size: [12, 8],
    dilation_rate_size: [48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 49,
    deep_layer_size: [1432, 1456, 1160, 1664, 928, 1288, 1072, 576],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [78, 92, 63, 48, 74, 90, 24, 29, 35, 11, 68, 38],
    dilation_rate_size: [130, 120, 110, 100, 90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 50,
    deep_layer_size: [144, 288, 432, 576, 720, 864, 1008, 1152],
    conv1d_filters: [1352, 1248, 1144, 1040, 936, 832, 728, 624, 520, 416, 312, 208],
    conv1d_kernel_size: [6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72],
    dilation_rate_size: [52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 51,
    deep_layer_size: [1008, 896, 784, 672, 560, 448, 336, 224],
    conv1d_filters: [2184, 2016, 1848, 1680, 1512, 1344, 1176, 1008, 840, 672, 504, 336],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],
    dilation_rate_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 52,
    deep_layer_size: [1008, 896, 784, 672, 560, 448, 336, 224],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8],
    dilation_rate_size: [8, 50, 28, 200, 80, 32, 136, 96, 64, 124, 58, 170],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 53,
    deep_layer_size: [720, 640, 560, 480, 400, 320, 240, 160],
    conv1d_filters: [1040, 960, 880, 800, 720, 640, 560, 480, 400, 320, 240, 160],
    conv1d_kernel_size: [78, 92, 63, 48, 74, 90, 24, 29, 35, 11, 68, 38],
    dilation_rate_size: [52, 48, 44, 40, 36, 32, 28, 24, 20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 54,
    deep_layer_size: [720, 640, 560, 480, 400, 320, 240, 160],
    conv1d_filters: [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],
    dilation_rate_size: [174, 88, 6, 108, 104, 64, 2, 148, 66, 76, 62, 56],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 55,
    deep_layer_size: [1656, 1472, 1288, 1104, 920, 736, 552, 368],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [10, 48, 67, 5, 92, 14, 68, 4, 88, 18, 17, 22],
    dilation_rate_size: [14, 28, 42, 56, 70, 84, 98, 112, 126, 140, 154, 168],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 56,
    deep_layer_size: [1008, 896, 784, 672, 560, 448, 336, 224],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],
    dilation_rate_size: [114, 48, 54, 70, 166, 30, 24, 16, 186, 52, 172, 178],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 57,
    deep_layer_size: [1008, 896, 784, 672, 560, 448, 336, 224],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [10, 48, 67, 5, 92, 14, 68, 4, 88, 18, 17, 22],
    dilation_rate_size: [104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 58,
    deep_layer_size: [1152, 1024, 896, 768, 640, 512, 384, 256],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840, 2024, 2208],
    conv1d_kernel_size: [6, 12, 18, 24, 30, 36, 42, 48, 54, 60, 66, 72],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64, 72, 80, 88, 96],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 59,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536, 1792, 2048],
    conv1d_filters: [2600, 2400, 2200, 2000, 1800, 1600, 1400, 1200, 1000, 800, 600, 400],
    conv1d_kernel_size: [7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84],
    dilation_rate_size: [182, 168, 154, 140, 126, 112, 98, 84, 70, 56, 42, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 60,
    deep_layer_size: [1432, 1456, 1160, 1664, 928, 1288, 1072, 576],
    conv1d_filters: [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400],
    conv1d_kernel_size: [65, 4, 27, 83, 22, 53, 80, 78, 87, 17, 26, 43],
    dilation_rate_size: [104, 96, 88, 80, 72, 64, 56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 61,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [400, 384],
    conv1d_kernel_size: [3, 6],
    dilation_rate_size: [4, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 62,
    deep_layer_size: [160, 368, 1384, 1960, 848, 1504, 2000, 1000],
    conv1d_filters: [528, 352],
    conv1d_kernel_size: [21, 14],
    dilation_rate_size: [10, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 63,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [400, 384],
    conv1d_kernel_size: [3, 6],
    dilation_rate_size: [12, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 64,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [144, 288],
    conv1d_kernel_size: [11, 2],
    dilation_rate_size: [4, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 65,
    deep_layer_size: [168, 336, 504, 672, 840, 1008, 1176, 1344],
    conv1d_filters: [400, 384],
    conv1d_kernel_size: [2, 7],
    dilation_rate_size: [12, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 66,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [144, 288],
    conv1d_kernel_size: [4, 8],
    dilation_rate_size: [30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 67,
    deep_layer_size: [8, 16, 24, 32, 40, 48, 56, 64],
    conv1d_filters: [400, 384],
    conv1d_kernel_size: [9, 6],
    dilation_rate_size: [10, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 68,
    deep_layer_size: [168, 336, 504, 672, 840, 1008, 1176, 1344],
    conv1d_filters: [104, 208],
    conv1d_kernel_size: [2, 7],
    dilation_rate_size: [12, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 69,
    deep_layer_size: [72, 64, 56, 48, 40, 32, 24, 16],
    conv1d_filters: [336, 224],
    conv1d_kernel_size: [9, 6],
    dilation_rate_size: [24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 70,
    deep_layer_size: [1616, 704, 728, 816, 72, 1488, 1344, 536],
    conv1d_filters: [528, 352],
    conv1d_kernel_size: [2, 7],
    dilation_rate_size: [24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 71,
    deep_layer_size: [1584, 1408, 1232, 1056, 880, 704, 528, 352],
    conv1d_filters: [400, 384],
    conv1d_kernel_size: [8, 13],
    dilation_rate_size: [24, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 72,
    deep_layer_size: [160, 368, 1384, 1960, 848, 1504, 2000, 1000],
    conv1d_filters: [112, 224],
    conv1d_kernel_size: [11, 2],
    dilation_rate_size: [8, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 73,
    deep_layer_size: [112, 224, 336, 448, 560, 672, 784, 896, 1008, 1120, 1232, 1344],
    conv1d_filters: [1408, 1736, 32, 1008, 1160, 784, 1416, 768],
    conv1d_kernel_size: [18, 16, 14, 12, 10, 8, 6, 4],
    dilation_rate_size: [90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 74,
    deep_layer_size: [368, 1056, 896, 1192, 1048, 840, 1152, 1952, 1560, 1232, 712, 2416],
    conv1d_filters: [648, 576, 504, 432, 360, 288, 216, 144],
    conv1d_kernel_size: [6, 12, 18, 24, 30, 36, 42, 48],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 75,
    deep_layer_size: [1104, 1680, 640, 2904, 1408, 2664, 1096, 2832, 1800, 1136, 768, 1520],
    conv1d_filters: [648, 576, 504, 432, 360, 288, 216, 144],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16],
    dilation_rate_size: [18, 16, 14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 76,
    deep_layer_size: [3008, 2792, 1520, 1152, 2216, 1608, 1160, 1592, 1752, 1360, 2584, 1584],
    conv1d_filters: [648, 576, 504, 432, 360, 288, 216, 144],
    conv1d_kernel_size: [27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 77,
    deep_layer_size: [624, 576, 528, 480, 432, 384, 336, 288, 240, 192, 144, 96],
    conv1d_filters: [1408, 1736, 32, 1008, 1160, 784, 1416, 768],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16],
    dilation_rate_size: [90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 78,
    deep_layer_size: [2184, 2016, 1848, 1680, 1512, 1344, 1176, 1008, 840, 672, 504, 336],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472],
    conv1d_kernel_size: [6, 12, 18, 24, 30, 36, 42, 48],
    dilation_rate_size: [34, 84, 114, 40, 80, 44, 102, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 79,
    deep_layer_size: [2288, 2112, 1936, 1760, 1584, 1408, 1232, 1056, 880, 704, 528, 352],
    conv1d_filters: [648, 576, 504, 432, 360, 288, 216, 144],
    conv1d_kernel_size: [5, 34, 32, 3, 43, 18, 7, 6],
    dilation_rate_size: [34, 84, 114, 40, 80, 44, 102, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 80,
    deep_layer_size: [2288, 2112, 1936, 1760, 1584, 1408, 1232, 1056, 880, 704, 528, 352],
    conv1d_filters: [184, 368, 552, 736, 920, 1104, 1288, 1472],
    conv1d_kernel_size: [33, 58, 19, 47, 56, 9, 59, 41],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 81,
    deep_layer_size: [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000, 2200, 2400],
    conv1d_filters: [224, 448, 672, 896, 1120, 1344, 1568, 1792],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 82,
    deep_layer_size: [112, 224, 336, 448, 560, 672, 784, 896, 1008, 1120, 1232, 1344],
    conv1d_filters: [224, 448, 672, 896, 1120, 1344, 1568, 1792],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 83,
    deep_layer_size: [176, 352, 528, 704, 880, 1056, 1232, 1408, 1584, 1760, 1936, 2112],
    conv1d_filters: [1408, 1736, 32, 1008, 1160, 784, 1416, 768],
    conv1d_kernel_size: [27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 84,
    deep_layer_size: [624, 576, 528, 480, 432, 384, 336, 288, 240, 192, 144, 96],
    conv1d_filters: [648, 576, 504, 432, 360, 288, 216, 144],
    conv1d_kernel_size: [18, 16, 14, 12, 10, 8, 6, 4],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 85,
    deep_layer_size: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840],
    conv1d_filters: [240, 480],
    conv1d_kernel_size: [3, 10],
    dilation_rate_size: [6, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 86,
    deep_layer_size: [352, 320, 288, 256, 224, 192, 160, 128, 96, 64],
    conv1d_filters: [56, 112],
    conv1d_kernel_size: [3, 12],
    dilation_rate_size: [18, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 87,
    deep_layer_size: [224, 448, 672, 896, 1120, 1344, 1568, 1792, 2016, 2240],
    conv1d_filters: [240, 160],
    conv1d_kernel_size: [6, 4],
    dilation_rate_size: [20, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 88,
    deep_layer_size: [184, 368, 552, 736, 920, 1104, 1288, 1472, 1656, 1840],
    conv1d_filters: [8, 144],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [18, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 89,
    deep_layer_size: [1504, 1552, 152, 336, 2464, 2008, 768, 1824, 1840, 1416],
    conv1d_filters: [312, 208],
    conv1d_kernel_size: [3, 12],
    dilation_rate_size: [18, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 90,
    deep_layer_size: [2136, 456, 1752, 736, 856, 1624, 1456, 408, 496, 2256],
    conv1d_filters: [240, 480],
    conv1d_kernel_size: [7, 14],
    dilation_rate_size: [2, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 91,
    deep_layer_size: [224, 448, 672, 896, 1120, 1344, 1568, 1792, 2016, 2240],
    conv1d_filters: [16, 32],
    conv1d_kernel_size: [9, 6],
    dilation_rate_size: [36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 92,
    deep_layer_size: [224, 448, 672, 896, 1120, 1344, 1568, 1792, 2016, 2240],
    conv1d_filters: [104, 408],
    conv1d_kernel_size: [5, 9],
    dilation_rate_size: [10, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 93,
    deep_layer_size: [1504, 1552, 152, 336, 2464, 2008, 768, 1824, 1840, 1416],
    conv1d_filters: [312, 208],
    conv1d_kernel_size: [3, 10],
    dilation_rate_size: [16, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 94,
    deep_layer_size: [472, 296, 408, 1616, 912, 2128, 2064, 1848, 2416, 1464],
    conv1d_filters: [240, 160],
    conv1d_kernel_size: [5, 10],
    dilation_rate_size: [6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 95,
    deep_layer_size: [1504, 1552, 152, 336, 2464, 2008, 768, 1824, 1840, 1416],
    conv1d_filters: [240, 160],
    conv1d_kernel_size: [7, 14],
    dilation_rate_size: [6, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 96,
    deep_layer_size: [1504, 1552, 152, 336, 2464, 2008, 768, 1824, 1840, 1416],
    conv1d_filters: [384, 256],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [6, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 97,
    deep_layer_size: [952, 816, 680, 544, 408, 272],
    conv1d_filters: [672, 576, 480, 384, 288, 192],
    conv1d_kernel_size: [14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 98,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536],
    conv1d_filters: [1280, 136, 616, 848, 368, 560],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 99,
    deep_layer_size: [952, 816, 680, 544, 408, 272],
    conv1d_filters: [1360, 272, 880, 1528, 1184, 168],
    conv1d_kernel_size: [26, 22, 28, 39, 7, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 100,
    deep_layer_size: [16, 32, 48, 64, 80, 96],
    conv1d_filters: [672, 576, 480, 384, 288, 192],
    conv1d_kernel_size: [28, 24, 20, 16, 12, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 101,
    deep_layer_size: [16, 32, 48, 64, 80, 96],
    conv1d_filters: [1344, 704, 56, 608, 256, 728],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 102,
    deep_layer_size: [16, 32, 48, 64, 80, 96],
    conv1d_filters: [168, 144, 120, 96, 72, 48],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 103,
    deep_layer_size: [40, 80, 120, 160, 200, 240],
    conv1d_filters: [128, 256, 384, 512, 640, 768],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 104,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536],
    conv1d_filters: [1280, 136, 616, 848, 368, 560],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 105,
    deep_layer_size: [952, 816, 680, 544, 408, 272],
    conv1d_filters: [1344, 704, 56, 608, 256, 728],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 106,
    deep_layer_size: [1504, 304, 784, 448, 640, 192],
    conv1d_filters: [56, 112, 168, 224, 280, 336],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 107,
    deep_layer_size: [616, 440, 24, 456, 80, 600],
    conv1d_filters: [128, 256, 384, 512, 640, 768],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 108,
    deep_layer_size: [952, 816, 680, 544, 408, 272],
    conv1d_filters: [168, 336, 504, 672, 840, 1008],
    conv1d_kernel_size: [14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
Created all search combinations in 2.6435248851776123 seconds
rsync -q -Pav /tmp/Abhinav_DATA1115337/hyperparameter_tuning/cnn/list_of_dicts.json /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/ 
rm -rf /tmp/Abhinav_DATA1115337/
index 0
param_dict {'num_cnn_layers': 4, 'num_deep_layers': 3, 'initial_learning_rate': 0.0005, 'decay_rate': 0.9, 'batch_size': 1200, 'index': 0, 'deep_layer_size': '[64, 128, 256]', 'epochs': 20000, 'patience': 400, 'input_shape': (400, 1), 'padding': 'same', 'dilation': False, 'conv1d_filters': '[64, 128, 256, 512]', 'conv1d_kernel_size': '[5, 7, 7, 7]', 'batch_normalization': False}
param_dict {'num_deep_layers': 6, 'initial_learning_rate': 0.00115, 'decay_rate': 0.95, 'batch_size': 400, 'num_cnn_layers': 10, 'padding': 'valid', 'dilation': True, 'batch_normalization': True, 'index': 1, 'deep_layer_size': '[1512, 1296, 1080, 864, 648, 432]', 'conv1d_filters': '[144, 288, 432, 576, 720, 864, 1008, 1152, 1296, 1440]', 'conv1d_kernel_size': '[7, 14, 21, 28, 35, 42, 49, 56, 63, 70]', 'dilation_rate_size': '[176, 160, 144, 128, 112, 96, 80, 64, 48, 32]', 'epochs': 20000, 'patience': 400, 'input_shape': (400, 1)}
