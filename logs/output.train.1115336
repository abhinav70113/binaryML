mkdir -p /tmp/Abhinav_DATA1115336/raw_data/runBB/
mkdir -p /tmp/Abhinav_DATA1115336/models/
mkdir -p /tmp/Abhinav_DATA1115336/hyperparameter_tuning/cnn/




############################################################################## 


           Comment: Binary simulations predictor: Predicting the frequency and drift. 
Best model is under:/tmp/Abhinav_DATA1115336/models/f_predict_cnn_1115336_            


 ############################################################################## 


 
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/train_data_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/val_data_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/test_labels_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/train_labels_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/test_data_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/raw_data/runBB/val_labels_chunk.npy /tmp/Abhinav_DATA1115336/raw_data/runBB/
rsync -Pav -q /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/* /tmp/Abhinav_DATA1115336/hyperparameter_tuning/cnn/
mkdir -p /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/
List of dictionaries not found, creating all search combinations
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 1,
    deep_layer_size: [1736, 1488, 1240, 992, 744, 496],
    conv1d_filters: [2112, 1920, 1728, 1536, 1344, 1152, 960, 768, 576, 384],
    conv1d_kernel_size: [55, 50, 45, 40, 35, 30, 25, 20, 15, 10],
    dilation_rate_size: [110, 100, 90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 2,
    deep_layer_size: [336, 288, 240, 192, 144, 96],
    conv1d_filters: [1632, 1496, 2472, 2176, 1984, 2488, 2072, 1712, 1728, 2136],
    conv1d_kernel_size: [4, 8, 12, 16, 20, 24, 28, 32, 36, 40],
    dilation_rate_size: [50, 14, 8, 168, 32, 130, 40, 160, 26, 154],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 3,
    deep_layer_size: [224, 448, 672, 896, 1120, 1344],
    conv1d_filters: [144, 288, 432, 576, 720, 864, 1008, 1152, 1296, 1440],
    conv1d_kernel_size: [20, 60, 17, 3, 51, 64, 43, 16, 10, 49],
    dilation_rate_size: [176, 160, 144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 4,
    deep_layer_size: [280, 240, 200, 160, 120, 80],
    conv1d_filters: [664, 464, 144, 952, 1864, 1600, 1752, 1192, 1728, 1448],
    conv1d_kernel_size: [66, 60, 54, 48, 42, 36, 30, 24, 18, 12],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64, 72, 80],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 5,
    deep_layer_size: [1352, 24, 1304, 504, 688, 312],
    conv1d_filters: [2112, 1920, 1728, 1536, 1344, 1152, 960, 768, 576, 384],
    conv1d_kernel_size: [33, 30, 27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [8, 16, 24, 32, 40, 48, 56, 64, 72, 80],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 6,
    deep_layer_size: [896, 768, 640, 512, 384, 256],
    conv1d_filters: [152, 304, 456, 608, 760, 912, 1064, 1216, 1368, 1520],
    conv1d_kernel_size: [33, 30, 27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [16, 64, 116, 42, 62, 108, 156, 104, 78, 52],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 7,
    deep_layer_size: [1736, 1488, 1240, 992, 744, 496],
    conv1d_filters: [880, 800, 720, 640, 560, 480, 400, 320, 240, 160],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    dilation_rate_size: [110, 100, 90, 80, 70, 60, 50, 40, 30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 8,
    deep_layer_size: [336, 288, 240, 192, 144, 96],
    conv1d_filters: [136, 1000, 1416, 480, 2216, 2104, 368, 2192, 648, 456],
    conv1d_kernel_size: [55, 50, 45, 40, 35, 30, 25, 20, 15, 10],
    dilation_rate_size: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 9,
    deep_layer_size: [280, 240, 200, 160, 120, 80],
    conv1d_filters: [248, 496, 744, 992, 1240, 1488, 1736, 1984, 2232, 2480],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    dilation_rate_size: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 10,
    deep_layer_size: [216, 432, 648, 864, 1080, 1296],
    conv1d_filters: [136, 1000, 1416, 480, 2216, 2104, 368, 2192, 648, 456],
    conv1d_kernel_size: [67, 70, 48, 11, 16, 27, 19, 71, 46, 14],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128, 144, 160],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 11,
    deep_layer_size: [176, 528, 1440, 712, 840, 576],
    conv1d_filters: [152, 304, 456, 608, 760, 912, 1064, 1216, 1368, 1520],
    conv1d_kernel_size: [20, 60, 17, 3, 51, 64, 43, 16, 10, 49],
    dilation_rate_size: [10, 20, 30, 40, 50, 60, 70, 80, 90, 100],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00115,
    decay_rate: 0.95,
    batch_size: 400,
    num_cnn_layers: 10,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 12,
    deep_layer_size: [1536, 1128, 1480, 1408, 1160, 736],
    conv1d_filters: [664, 464, 144, 952, 1864, 1600, 1752, 1192, 1728, 1448],
    conv1d_kernel_size: [55, 50, 45, 40, 35, 30, 25, 20, 15, 10],
    dilation_rate_size: [176, 160, 144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 13,
    deep_layer_size: [456, 304],
    conv1d_filters: [1384, 1152, 400, 496, 448, 712],
    conv1d_kernel_size: [12, 8, 20, 46, 39, 6],
    dilation_rate_size: [14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 14,
    deep_layer_size: [136, 272],
    conv1d_filters: [992, 1144, 464, 1168, 1504, 336],
    conv1d_kernel_size: [42, 36, 30, 24, 18, 12],
    dilation_rate_size: [10, 20, 30, 40, 50, 60],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 15,
    deep_layer_size: [392, 136],
    conv1d_filters: [176, 504, 904, 1496, 944, 960],
    conv1d_kernel_size: [2, 4, 6, 8, 10, 12],
    dilation_rate_size: [12, 24, 36, 48, 60, 72],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 16,
    deep_layer_size: [48, 96],
    conv1d_filters: [592, 672, 776, 1040, 1032, 952],
    conv1d_kernel_size: [14, 12, 10, 8, 6, 4],
    dilation_rate_size: [24, 74, 38, 76, 18, 48],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 17,
    deep_layer_size: [576, 384],
    conv1d_filters: [1384, 1152, 400, 496, 448, 712],
    conv1d_kernel_size: [12, 8, 20, 46, 39, 6],
    dilation_rate_size: [92, 98, 8, 12, 72, 30],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 18,
    deep_layer_size: [48, 96],
    conv1d_filters: [448, 384, 320, 256, 192, 128],
    conv1d_kernel_size: [28, 24, 20, 16, 12, 8],
    dilation_rate_size: [14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 19,
    deep_layer_size: [80, 224],
    conv1d_filters: [48, 96, 144, 192, 240, 288],
    conv1d_kernel_size: [12, 30, 18, 22, 47, 15],
    dilation_rate_size: [14, 12, 10, 8, 6, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 20,
    deep_layer_size: [216, 432],
    conv1d_filters: [176, 504, 904, 1496, 944, 960],
    conv1d_kernel_size: [12, 8, 20, 46, 39, 6],
    dilation_rate_size: [12, 24, 36, 48, 60, 72],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 21,
    deep_layer_size: [672, 448],
    conv1d_filters: [8, 16, 24, 32, 40, 48],
    conv1d_kernel_size: [42, 36, 30, 24, 18, 12],
    dilation_rate_size: [112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 22,
    deep_layer_size: [512, 496],
    conv1d_filters: [1384, 1152, 400, 496, 448, 712],
    conv1d_kernel_size: [12, 8, 20, 46, 39, 6],
    dilation_rate_size: [92, 98, 8, 12, 72, 30],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 23,
    deep_layer_size: [136, 272],
    conv1d_filters: [992, 1144, 464, 1168, 1504, 336],
    conv1d_kernel_size: [5, 10, 15, 20, 25, 30],
    dilation_rate_size: [84, 72, 60, 48, 36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 2,
    initial_learning_rate: 0.00021,
    decay_rate: 0.7,
    batch_size: 400,
    num_cnn_layers: 6,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 24,
    deep_layer_size: [80, 224],
    conv1d_filters: [8, 16, 24, 32, 40, 48],
    conv1d_kernel_size: [12, 30, 18, 22, 47, 15],
    dilation_rate_size: [84, 72, 60, 48, 36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 25,
    deep_layer_size: [800, 640, 480, 320],
    conv1d_filters: [320, 256, 192, 128],
    conv1d_kernel_size: [8, 15, 5, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 26,
    deep_layer_size: [104, 240, 344, 80],
    conv1d_filters: [664, 240, 688, 232],
    conv1d_kernel_size: [4, 8, 12, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 27,
    deep_layer_size: [232, 464, 696, 928],
    conv1d_filters: [568, 168, 888, 720],
    conv1d_kernel_size: [2, 4, 6, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 28,
    deep_layer_size: [120, 240, 360, 480],
    conv1d_filters: [72, 144, 216, 288],
    conv1d_kernel_size: [7, 26, 16, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 29,
    deep_layer_size: [208, 416, 624, 832],
    conv1d_filters: [320, 256, 192, 128],
    conv1d_kernel_size: [4, 8, 12, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 30,
    deep_layer_size: [232, 464, 696, 928],
    conv1d_filters: [144, 288, 432, 576],
    conv1d_kernel_size: [19, 31, 14, 22],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 31,
    deep_layer_size: [680, 208, 832, 216],
    conv1d_filters: [1160, 928, 696, 464],
    conv1d_kernel_size: [4, 8, 12, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 32,
    deep_layer_size: [800, 640, 480, 320],
    conv1d_filters: [192, 384, 576, 768],
    conv1d_kernel_size: [30, 24, 18, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 33,
    deep_layer_size: [208, 416, 624, 832],
    conv1d_filters: [256, 512, 768, 1024],
    conv1d_kernel_size: [35, 28, 21, 14],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 34,
    deep_layer_size: [680, 208, 832, 216],
    conv1d_filters: [144, 288, 432, 576],
    conv1d_kernel_size: [7, 14, 21, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 35,
    deep_layer_size: [40, 80, 120, 160],
    conv1d_filters: [72, 128, 960, 648],
    conv1d_kernel_size: [7, 14, 21, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00054,
    decay_rate: 0.7,
    batch_size: 800,
    num_cnn_layers: 4,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 36,
    deep_layer_size: [104, 240, 344, 80],
    conv1d_filters: [72, 128, 960, 648],
    conv1d_kernel_size: [2, 4, 6, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 37,
    deep_layer_size: [144, 288, 432, 576],
    conv1d_filters: [80, 160],
    conv1d_kernel_size: [3, 6],
    dilation_rate_size: [2, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 38,
    deep_layer_size: [152, 304, 456, 608],
    conv1d_filters: [288, 192],
    conv1d_kernel_size: [21, 14],
    dilation_rate_size: [16, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 39,
    deep_layer_size: [600, 816, 752, 776],
    conv1d_filters: [64, 224],
    conv1d_kernel_size: [11, 13],
    dilation_rate_size: [2, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 40,
    deep_layer_size: [648, 784, 624, 88],
    conv1d_filters: [320, 496],
    conv1d_kernel_size: [4, 8],
    dilation_rate_size: [24, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 41,
    deep_layer_size: [144, 288, 432, 576],
    conv1d_filters: [80, 160],
    conv1d_kernel_size: [11, 13],
    dilation_rate_size: [36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 42,
    deep_layer_size: [960, 768, 576, 384],
    conv1d_filters: [160, 320],
    conv1d_kernel_size: [5, 10],
    dilation_rate_size: [24, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 43,
    deep_layer_size: [152, 304, 456, 608],
    conv1d_filters: [104, 56],
    conv1d_kernel_size: [2, 6],
    dilation_rate_size: [14, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 44,
    deep_layer_size: [144, 288, 432, 576],
    conv1d_filters: [768, 512],
    conv1d_kernel_size: [5, 10],
    dilation_rate_size: [32, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 45,
    deep_layer_size: [960, 768, 576, 384],
    conv1d_filters: [408, 272],
    conv1d_kernel_size: [15, 10],
    dilation_rate_size: [24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 46,
    deep_layer_size: [648, 784, 624, 88],
    conv1d_filters: [408, 272],
    conv1d_kernel_size: [2, 6],
    dilation_rate_size: [36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 47,
    deep_layer_size: [248, 496, 744, 992],
    conv1d_filters: [64, 224],
    conv1d_kernel_size: [21, 14],
    dilation_rate_size: [36, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 4,
    initial_learning_rate: 0.00087,
    decay_rate: 0.8,
    batch_size: 400,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: true,
    index: 48,
    deep_layer_size: [144, 288, 432, 576],
    conv1d_filters: [104, 56],
    conv1d_kernel_size: [6, 4],
    dilation_rate_size: [24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 49,
    deep_layer_size: [136, 272, 408, 544, 680, 816, 952, 1088],
    conv1d_filters: [3120, 2880, 2640, 2400, 2160, 1920, 1680, 1440, 1200, 960, 720, 480],
    conv1d_kernel_size: [37, 88, 18, 51, 16, 22, 38, 35, 45, 24, 68, 42],
    dilation_rate_size: [146, 44, 12, 182, 170, 64, 100, 150, 8, 84, 164, 14],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 50,
    deep_layer_size: [2024, 880, 1440, 232, 960, 1504, 1272, 1352],
    conv1d_filters: [192, 384, 576, 768, 960, 1152, 1344, 1536, 1728, 1920, 2112, 2304],
    conv1d_kernel_size: [26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 51,
    deep_layer_size: [2304, 2048, 1792, 1536, 1280, 1024, 768, 512],
    conv1d_filters: [152, 2000, 1448, 1456, 2720, 1152, 3056, 1600, 1080, 640, 2656, 1720],
    conv1d_kernel_size: [7, 14, 21, 28, 35, 42, 49, 56, 63, 70, 77, 84],
    dilation_rate_size: [150, 104, 6, 90, 178, 156, 88, 26, 120, 196, 182, 200],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 52,
    deep_layer_size: [248, 496, 744, 992, 1240, 1488, 1736, 1984],
    conv1d_filters: [3120, 2880, 2640, 2400, 2160, 1920, 1680, 1440, 1200, 960, 720, 480],
    conv1d_kernel_size: [87, 16, 11, 78, 2, 43, 30, 25, 17, 82, 22, 8],
    dilation_rate_size: [138, 88, 84, 102, 50, 156, 90, 174, 182, 92, 106, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 53,
    deep_layer_size: [1136, 848, 968, 296, 648, 1488, 1360, 1496],
    conv1d_filters: [56, 2184, 2032, 1496, 2840, 1008, 2592, 1632, 1104, 1880, 1824, 80],
    conv1d_kernel_size: [17, 36, 55, 48, 72, 45, 3, 44, 5, 52, 28, 35],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 54,
    deep_layer_size: [1136, 848, 968, 296, 648, 1488, 1360, 1496],
    conv1d_filters: [64, 128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768],
    conv1d_kernel_size: [91, 84, 77, 70, 63, 56, 49, 42, 35, 28, 21, 14],
    dilation_rate_size: [138, 88, 84, 102, 50, 156, 90, 174, 182, 92, 106, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 55,
    deep_layer_size: [16, 488, 888, 496, 1448, 632, 120, 1240],
    conv1d_filters: [256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560, 2816, 3072],
    conv1d_kernel_size: [26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4],
    dilation_rate_size: [146, 44, 12, 182, 170, 64, 100, 150, 8, 84, 164, 14],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 56,
    deep_layer_size: [176, 352, 528, 704, 880, 1056, 1232, 1408],
    conv1d_filters: [192, 384, 576, 768, 960, 1152, 1344, 1536, 1728, 1920, 2112, 2304],
    conv1d_kernel_size: [26, 44, 75, 21, 14, 73, 60, 87, 59, 12, 19, 8],
    dilation_rate_size: [138, 88, 84, 102, 50, 156, 90, 174, 182, 92, 106, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 57,
    deep_layer_size: [440, 1488, 296, 1584, 968, 1408, 2032, 1280],
    conv1d_filters: [152, 2000, 1448, 1456, 2720, 1152, 3056, 1600, 1080, 640, 2656, 1720],
    conv1d_kernel_size: [91, 84, 77, 70, 63, 56, 49, 42, 35, 28, 21, 14],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 58,
    deep_layer_size: [2024, 880, 1440, 232, 960, 1504, 1272, 1352],
    conv1d_filters: [192, 384, 576, 768, 960, 1152, 1344, 1536, 1728, 1920, 2112, 2304],
    conv1d_kernel_size: [17, 36, 55, 48, 72, 45, 3, 44, 5, 52, 28, 35],
    dilation_rate_size: [16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 59,
    deep_layer_size: [576, 512, 448, 384, 320, 256, 192, 128],
    conv1d_filters: [416, 384, 352, 320, 288, 256, 224, 192, 160, 128, 96, 64],
    conv1d_kernel_size: [87, 16, 11, 78, 2, 43, 30, 25, 17, 82, 22, 8],
    dilation_rate_size: [182, 168, 154, 140, 126, 112, 98, 84, 70, 56, 42, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.9,
    batch_size: 400,
    num_cnn_layers: 12,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 60,
    deep_layer_size: [2304, 2048, 1792, 1536, 1280, 1024, 768, 512],
    conv1d_filters: [728, 672, 616, 560, 504, 448, 392, 336, 280, 224, 168, 112],
    conv1d_kernel_size: [87, 16, 11, 78, 2, 43, 30, 25, 17, 82, 22, 8],
    dilation_rate_size: [138, 88, 84, 102, 50, 156, 90, 174, 182, 92, 106, 130],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 61,
    deep_layer_size: [208, 416, 624, 832, 1040, 1248, 1456, 1664],
    conv1d_filters: [696, 464],
    conv1d_kernel_size: [14, 4],
    dilation_rate_size: [22, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 62,
    deep_layer_size: [1408, 1504, 512, 1472, 1536, 1096, 168, 816],
    conv1d_filters: [192, 296],
    conv1d_kernel_size: [9, 14],
    dilation_rate_size: [8, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 63,
    deep_layer_size: [208, 416, 624, 832, 1040, 1248, 1456, 1664],
    conv1d_filters: [192, 296],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [12, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 64,
    deep_layer_size: [208, 416, 624, 832, 1040, 1248, 1456, 1664],
    conv1d_filters: [192, 80],
    conv1d_kernel_size: [7, 14],
    dilation_rate_size: [14, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 65,
    deep_layer_size: [1408, 1504, 512, 1472, 1536, 1096, 168, 816],
    conv1d_filters: [144, 288],
    conv1d_kernel_size: [7, 14],
    dilation_rate_size: [30, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 66,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [64, 128],
    conv1d_kernel_size: [14, 4],
    dilation_rate_size: [24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 67,
    deep_layer_size: [144, 288, 432, 576, 720, 864, 1008, 1152],
    conv1d_filters: [248, 496],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [12, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 68,
    deep_layer_size: [152, 304, 456, 608, 760, 912, 1064, 1216],
    conv1d_filters: [64, 128],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [14, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 69,
    deep_layer_size: [144, 288, 432, 576, 720, 864, 1008, 1152],
    conv1d_filters: [768, 512],
    conv1d_kernel_size: [9, 6],
    dilation_rate_size: [8, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 70,
    deep_layer_size: [2016, 1792, 1568, 1344, 1120, 896, 672, 448],
    conv1d_filters: [448, 16],
    conv1d_kernel_size: [18, 12],
    dilation_rate_size: [2, 28],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 71,
    deep_layer_size: [176, 352, 528, 704, 880, 1056, 1232, 1408],
    conv1d_filters: [288, 192],
    conv1d_kernel_size: [9, 14],
    dilation_rate_size: [12, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 8,
    initial_learning_rate: 0.00011,
    decay_rate: 0.85,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: same,
    dilation: true,
    batch_normalization: false,
    index: 72,
    deep_layer_size: [176, 352, 528, 704, 880, 1056, 1232, 1408],
    conv1d_filters: [64, 128],
    conv1d_kernel_size: [2, 4],
    dilation_rate_size: [6, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 73,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560, 2816, 3072],
    conv1d_filters: [1952, 1296, 1184, 1920, 2008, 448, 64, 1536],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 74,
    deep_layer_size: [1744, 1056, 2400, 3024, 784, 1160, 2064, 1792, 2904, 2240, 1856, 152],
    conv1d_filters: [1368, 1216, 1064, 912, 760, 608, 456, 304],
    conv1d_kernel_size: [27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 75,
    deep_layer_size: [3328, 3072, 2816, 2560, 2304, 2048, 1792, 1536, 1280, 1024, 768, 512],
    conv1d_filters: [2088, 1856, 1624, 1392, 1160, 928, 696, 464],
    conv1d_kernel_size: [63, 56, 49, 42, 35, 28, 21, 14],
    dilation_rate_size: [24, 2, 106, 74, 6, 116, 72, 96],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 76,
    deep_layer_size: [1040, 2360, 1112, 2832, 432, 504, 2048, 1208, 2296, 1984, 1336, 720],
    conv1d_filters: [176, 352, 528, 704, 880, 1056, 1232, 1408],
    conv1d_kernel_size: [53, 2, 7, 10, 28, 59, 17, 18],
    dilation_rate_size: [122, 56, 26, 82, 18, 48, 14, 132],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 77,
    deep_layer_size: [120, 240, 360, 480, 600, 720, 840, 960, 1080, 1200, 1320, 1440],
    conv1d_filters: [1952, 1296, 1184, 1920, 2008, 448, 64, 1536],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 78,
    deep_layer_size: [1560, 776, 2240, 1752, 2488, 2728, 2640, 2024, 584, 1488, 304, 160],
    conv1d_filters: [1800, 1600, 1400, 1200, 1000, 800, 600, 400],
    conv1d_kernel_size: [53, 2, 7, 10, 28, 59, 17, 18],
    dilation_rate_size: [2, 4, 6, 8, 10, 12, 14, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 79,
    deep_layer_size: [1408, 2760, 3000, 1184, 2664, 488, 2400, 904, 352, 1024, 2040, 2440],
    conv1d_filters: [1368, 1216, 1064, 912, 760, 608, 456, 304],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 80,
    deep_layer_size: [1872, 1728, 1584, 1440, 1296, 1152, 1008, 864, 720, 576, 432, 288],
    conv1d_filters: [1112, 1600, 1752, 904, 968, 40, 504, 1272],
    conv1d_kernel_size: [36, 32, 28, 24, 20, 16, 12, 8],
    dilation_rate_size: [4, 8, 12, 16, 20, 24, 28, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 81,
    deep_layer_size: [1040, 2360, 1112, 2832, 432, 504, 2048, 1208, 2296, 1984, 1336, 720],
    conv1d_filters: [720, 184, 1224, 1360, 768, 1176, 1184, 1504],
    conv1d_kernel_size: [63, 56, 49, 42, 35, 28, 21, 14],
    dilation_rate_size: [24, 2, 106, 74, 6, 116, 72, 96],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 82,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560, 2816, 3072],
    conv1d_filters: [1368, 1216, 1064, 912, 760, 608, 456, 304],
    conv1d_kernel_size: [27, 24, 21, 18, 15, 12, 9, 6],
    dilation_rate_size: [144, 128, 112, 96, 80, 64, 48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 83,
    deep_layer_size: [2184, 2016, 1848, 1680, 1512, 1344, 1176, 1008, 840, 672, 504, 336],
    conv1d_filters: [720, 640, 560, 480, 400, 320, 240, 160],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [72, 64, 56, 48, 40, 32, 24, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 12,
    initial_learning_rate: 0.00625,
    decay_rate: 0.8,
    batch_size: 800,
    num_cnn_layers: 8,
    padding: valid,
    dilation: true,
    batch_normalization: true,
    index: 84,
    deep_layer_size: [1872, 1728, 1584, 1440, 1296, 1152, 1008, 864, 720, 576, 432, 288],
    conv1d_filters: [1800, 1600, 1400, 1200, 1000, 800, 600, 400],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18, 21, 24],
    dilation_rate_size: [2, 112, 90, 76, 98, 60, 8, 12],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 85,
    deep_layer_size: [1672, 1520, 1368, 1216, 1064, 912, 760, 608, 456, 304],
    conv1d_filters: [48, 96],
    conv1d_kernel_size: [10, 15],
    dilation_rate_size: [22, 30],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 86,
    deep_layer_size: [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000],
    conv1d_filters: [384, 256],
    conv1d_kernel_size: [6, 12],
    dilation_rate_size: [14, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 87,
    deep_layer_size: [200, 400, 600, 800, 1000, 1200, 1400, 1600, 1800, 2000],
    conv1d_filters: [120, 240],
    conv1d_kernel_size: [4, 8],
    dilation_rate_size: [2, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 88,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560],
    conv1d_filters: [552, 368],
    conv1d_kernel_size: [12, 7],
    dilation_rate_size: [10, 20],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 89,
    deep_layer_size: [1696, 336, 2552, 1904, 80, 2392, 2128, 2000, 312, 2192],
    conv1d_filters: [384, 256],
    conv1d_kernel_size: [2, 4],
    dilation_rate_size: [2, 4],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 90,
    deep_layer_size: [32, 576, 296, 2432, 2152, 1032, 208, 560, 2024, 1096],
    conv1d_filters: [264, 456],
    conv1d_kernel_size: [6, 4],
    dilation_rate_size: [14, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 91,
    deep_layer_size: [256, 512, 768, 1024, 1280, 1536, 1792, 2048, 2304, 2560],
    conv1d_filters: [552, 368],
    conv1d_kernel_size: [13, 14],
    dilation_rate_size: [14, 8],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 92,
    deep_layer_size: [2288, 2080, 1872, 1664, 1456, 1248, 1040, 832, 624, 416],
    conv1d_filters: [336, 224],
    conv1d_kernel_size: [6, 12],
    dilation_rate_size: [8, 16],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 93,
    deep_layer_size: [32, 576, 296, 2432, 2152, 1032, 208, 560, 2024, 1096],
    conv1d_filters: [80, 160],
    conv1d_kernel_size: [4, 8],
    dilation_rate_size: [48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 94,
    deep_layer_size: [1056, 960, 864, 768, 672, 576, 480, 384, 288, 192],
    conv1d_filters: [720, 480],
    conv1d_kernel_size: [9, 6],
    dilation_rate_size: [8, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 95,
    deep_layer_size: [2288, 2080, 1872, 1664, 1456, 1248, 1040, 832, 624, 416],
    conv1d_filters: [384, 256],
    conv1d_kernel_size: [21, 14],
    dilation_rate_size: [22, 30],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 10,
    initial_learning_rate: 0.00072,
    decay_rate: 0.6,
    batch_size: 1200,
    num_cnn_layers: 2,
    padding: valid,
    dilation: true,
    batch_normalization: false,
    index: 96,
    deep_layer_size: [40, 80, 120, 160, 200, 240, 280, 320, 360, 400],
    conv1d_filters: [120, 240],
    conv1d_kernel_size: [12, 7],
    dilation_rate_size: [48, 32],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 97,
    deep_layer_size: [1736, 1488, 1240, 992, 744, 496],
    conv1d_filters: [1176, 1008, 840, 672, 504, 336],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 98,
    deep_layer_size: [920, 696, 752, 496, 400, 808],
    conv1d_filters: [488, 304, 1176, 832, 8, 1024],
    conv1d_kernel_size: [49, 42, 35, 28, 21, 14],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 99,
    deep_layer_size: [408, 1096, 144, 56, 48, 1072],
    conv1d_filters: [64, 128, 192, 256, 320, 384],
    conv1d_kernel_size: [4, 8, 12, 16, 20, 24],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 100,
    deep_layer_size: [920, 696, 752, 496, 400, 808],
    conv1d_filters: [64, 128, 192, 256, 320, 384],
    conv1d_kernel_size: [7, 14, 21, 28, 35, 42],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 101,
    deep_layer_size: [192, 384, 576, 768, 960, 1152],
    conv1d_filters: [96, 192, 288, 384, 480, 576],
    conv1d_kernel_size: [2, 4, 42, 36, 21, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 102,
    deep_layer_size: [328, 1456, 192, 1424, 600, 400],
    conv1d_filters: [112, 96, 80, 64, 48, 32],
    conv1d_kernel_size: [13, 42, 26, 43, 44, 19],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 103,
    deep_layer_size: [56, 48, 40, 32, 24, 16],
    conv1d_filters: [488, 304, 1176, 832, 8, 1024],
    conv1d_kernel_size: [3, 6, 9, 12, 15, 18],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 104,
    deep_layer_size: [192, 384, 576, 768, 960, 1152],
    conv1d_filters: [96, 192, 288, 384, 480, 576],
    conv1d_kernel_size: [38, 44, 32, 17, 20, 6],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 105,
    deep_layer_size: [1736, 1488, 1240, 992, 744, 496],
    conv1d_filters: [96, 192, 288, 384, 480, 576],
    conv1d_kernel_size: [35, 30, 25, 20, 15, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 106,
    deep_layer_size: [280, 240, 200, 160, 120, 80],
    conv1d_filters: [168, 336, 504, 672, 840, 1008],
    conv1d_kernel_size: [49, 42, 35, 28, 21, 14],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 107,
    deep_layer_size: [192, 384, 576, 768, 960, 1152],
    conv1d_filters: [168, 336, 504, 672, 840, 1008],
    conv1d_kernel_size: [13, 42, 26, 43, 44, 19],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
{
    num_deep_layers: 6,
    initial_learning_rate: 0.00045,
    decay_rate: 0.6,
    batch_size: 800,
    num_cnn_layers: 6,
    padding: same,
    dilation: false,
    batch_normalization: true,
    index: 108,
    deep_layer_size: [280, 240, 200, 160, 120, 80],
    conv1d_filters: [112, 96, 80, 64, 48, 32],
    conv1d_kernel_size: [2, 4, 42, 36, 21, 10],
    epochs: 20000,
    patience: 400,
    input_shape: [
        400,
        1
    ]
}
Created all search combinations in 2.664517879486084 seconds
rsync -q -Pav /tmp/Abhinav_DATA1115336/hyperparameter_tuning/cnn/list_of_dicts.json /hercules/scratch/atya/BinaryML/hyperparameter_tuning/cnn/ 
rm -rf /tmp/Abhinav_DATA1115336/
index 0
param_dict {'num_cnn_layers': 4, 'num_deep_layers': 3, 'initial_learning_rate': 0.0005, 'decay_rate': 0.9, 'batch_size': 1200, 'index': 0, 'deep_layer_size': '[64, 128, 256]', 'epochs': 20000, 'patience': 400, 'input_shape': (400, 1), 'padding': 'same', 'dilation': False, 'conv1d_filters': '[64, 128, 256, 512]', 'conv1d_kernel_size': '[5, 7, 7, 7]', 'batch_normalization': False}
param_dict {'num_deep_layers': 6, 'initial_learning_rate': 0.00115, 'decay_rate': 0.95, 'batch_size': 400, 'num_cnn_layers': 10, 'padding': 'valid', 'dilation': True, 'batch_normalization': True, 'index': 12, 'deep_layer_size': '[1536, 1128, 1480, 1408, 1160, 736]', 'conv1d_filters': '[664, 464, 144, 952, 1864, 1600, 1752, 1192, 1728, 1448]', 'conv1d_kernel_size': '[55, 50, 45, 40, 35, 30, 25, 20, 15, 10]', 'dilation_rate_size': '[176, 160, 144, 128, 112, 96, 80, 64, 48, 32]', 'epochs': 20000, 'patience': 400, 'input_shape': (400, 1)}
